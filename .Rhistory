industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry_yearly <- industry %>%
group_by(year) %>%
summarise(NoDur = mean(NoDur)) %>%
summarise(DurbI = mean(DurbI)) %>%
summarise(Manuf = mean(Manuf)) %>%
summarise(Enrgy = mean(Enrgy)) %>%
summarise(HiTec = mean(HiTec)) %>%
summarise(Telcm = mean(Telcm)) %>%
summarise(Shops = mean(Shops)) %>%
summarise(Hlth = mean(Hlth)) %>%
summarise(Utils = mean(Utils)) %>%
summarise(Other = mean(Other))
industry$year <- parse_number(industry$year)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry_yearly <- industry %>%
group_by(year) %>%
colMeans()
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry_yearly <- industry %>%
group_by(year) %>%
colMeans()
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all("mean")
head(industry_yearly)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry <- industry %>%
parse_double(industry[,c(2:10)])
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry[,c(2:10)] <- parse_number(industry[,c(2:10)])
industry$year <- parse_number(industry$year)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry[,c(2:10)] <- parse_character(industry[,c(2:10)])
industry$year <- parse_number(industry$year)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry[,c(2:10)] <- as.character(industry[,c(2:10)])
industry[,c(2:10)] <- parse_number(industry[,c(2:10)])
head(industry)
industry$NoDur <- parse_character(industry$NoDur)
head(industry)
industry$NoDur <- as.character(industry$NoDur)
head(industry)
industry$NoDur <- parse_character(industry$NoDur)
head(industry)
industry$NoDur <- parse_character(industry$NoDur)
industry$NoDur <- parse_double(industry$NoDur)
head(industry)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv")
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry$NoDur <- parse_character(industry$NoDur)
knitr::opts_chunk$set(echo = TRUE)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv", stringsAsFactors=FALSE)
patents <- read.csv("patents_granted_total.csv")
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
head(industry)
# tidying / making industry dataset what i need
industry <- industry %>%
separate(Year, into = c("year", "month"), sep = 4)
head(industry)
industry$year <- parse_number(industry$year)
industry <- industry %>%
select(-month)
industry <- industry %>%
parse_double(c(2:11))
industry <- industry %>%
parse_double(industry[,c(2:11)])
apply(industry[-year], MARGIN = 2, FUN = parse_number())
apply(industry[-year], MARGIN = 2, FUN = parse_number(x))
industry <- industry %>%
group_by_all() %>%
parse_double()
head(industry)
industry[,c(2:11)] <- sapply(industry[,c(2:11)], as.numeric)
industry[,c(2:11)] <- sapply(industry[,c(2:11)], as.numeric)
head(industry)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all("mean")
head(industry_yearly)
industry[,c(2:11)] <- sapply(industry[,c(2:11)], as.numeric)
industry[,c(2:11)] <- sapply(industry[,c(2:11)], as.numeric)
head(industry)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(.funs = mean())
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(.funs = mean
head(industry_yearly)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(.funs = mean)
head(industry_yearly)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(.funs = mean)
view(industry_yearly)
industry_group <- group_by(industry, year)
view(industry_group)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(mean)
industry_yearly <- industry %>%
group_by(year) %>%
summarise_all(mean)
view(industry_yearly)
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2234:2325),]
view(industry)
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2233:2326),]
view(industry)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv", stringsAsFactors=FALSE)
patents <- read.csv("patents_granted_total.csv")
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2233:2326),]
view(industry)
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2234:2326),]
view(industry)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv", stringsAsFactors=FALSE)
patents <- read.csv("patents_granted_total.csv")
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2234:2326),]
view(industry)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv", stringsAsFactors=FALSE)
patents <- read.csv("patents_granted_total.csv")
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2234-2326 in dataset
industry <- industry[c(2235:2326),]
view(industry)
# joining the industry and patent datasets
view(patents)
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# joining the industry and patent datasets
view(patents)
# reading in data
library(tidyverse)
industry <- read.csv("10_Industry_Portfolios.csv", stringsAsFactors=FALSE)
patents <- read.csv("patents_granted_total.csv")
# tidying the industry dataset
# note that the industry dataset is actually several different datasets
# The data set I will need is Average Value Weighted Returns - Annual, because my patent data is annual as well
# These are rows 2235-2326 in dataset
industry <- industry[c(2235:2326),]
industry <- industry %>%
rename(year = Year)
# dataset is as needed now
# joining the industry and patent datasets
view(industry)
view(patents)
# tidying the patent dataset
patents <- patents %>%
filter(country == "United States")
gathernames <- patents %>%
select(-country) %>%
colnames()
patents <- patents %>%
gather(gathernames, key = "year", value = patent_count)
patents <- patents %>%
select(-country)
patents$year <- parse_number(patents$year)
# patent dataset tidy
# joining the industry and patent datasets
view(industry)
view(patents)
# joining the industry and patent datasets
patently <- inner_join(industry, patents, by = "year")
head(industry)
industry$year <- parse_number(industry$year)
# joining the industry and patent datasets
patently <- inner_join(industry, patents, by = "year")
view(patently)
# preliminary visualisations
ggplot(data = patently) +
geom_line(mapping = aes(x=year, y=patent_count))
# preliminary visualisations
ggplot(data = patently) +
geom_line(mapping = aes(x=year, y=patent_count)) +
geom_point(mapping = aes(x=year, y=HiTec))
head(patently)
patently[, c(2:11)] <- sapply(patently[, c(2:11)], as.numeric)
head(patently)
ggplot(data = patently) +
geom_line(mapping = aes(x=year, y=patent_count)) +
geom_point(mapping = aes(x=year, y=HiTec))
ggplot(data = patently) +
geom_line(mapping = aes(x=patent_count, y=NoDur))
ggplot(data = patently) +
geom_point(mapping = aes(x=patent_count, y=NoDur))
ggplot(data = patently) +
geom_point(mapping = aes(x=patent_count, y=HiTec))
ggplot(data = patently) +
geom_smooth(mapping = aes(x=patent_count, y=HiTec, color = "HiTec")) +
geom_smooth(mapping = aes(x=patent_count, y=NoDur, color = "NoDur")) +
geom_smooth(mapping = aes(x=patent_count, y=Durbl, color = "Durbl")) +
geom_smooth(mapping = aes(x=patent_count, y=Manuf, color = "Manuf")) +
geom_smooth(mapping = aes(x=patent_count, y=Enrgy, color = "Enrgy")) +
geom_smooth(mapping = aes(x=patent_count, y=Telcm, color = "Telcm")) +
geom_smooth(mapping = aes(x=patent_count, y=Shops, color = "Shops")) +
geom_smooth(mapping = aes(x=patent_count, y=Hlth, color = "Hlth")) +
geom_smooth(mapping = aes(x=patent_count, y=Utils, color = "Utils")) +
geom_smooth(mapping = aes(x=patent_count, y=Other, color = "Other"))
ggplot(data = patently) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=HiTec, color = "HiTec")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=NoDur, color = "NoDur")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Durbl, color = "Durbl")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Manuf, color = "Manuf")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Enrgy, color = "Enrgy")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Telcm, color = "Telcm")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Shops, color = "Shops")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Hlth, color = "Hlth")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Utils, color = "Utils")) +
geom_smooth(se = FALSE, mapping = aes(x=patent_count, y=Other, color = "Other"))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(babynames)
datababy_change_ariel <- datababy %>%
filter(year > 1987 & year < 1991) %>%
filter(sex == "F") %>%
filter(str_detect(name, "^A[aei]*[r]+[iael]+l[e]*$")) %>%
group_by(year) %>%
mutate(totalprop = sum(prop)) %>%
filter(name == "Ariel") %>%
mutate(totalpropstandard = totalprop*(10^4)) %>%
mutate(logprop = log(totalpropstandard))
datababy_change <- datababy %>%
filter(year > 1987 & year < 1991) %>%
filter(sex == "F") %>%
filter(str_detect(name, "^[AEIOU]")) %>%
group_by(year) %>%
mutate(totalprop = sum(prop)) %>%
filter(name == "Ariel") %>%
mutate(totalpropstandard = totalprop*(10^4)) %>%
mutate(logprop = log(totalpropstandard))
ggplot() +
geom_line(data = datababy_change, mapping = aes(x=year, y = logprop, color = "Vowels"), size = 2) +
geom_line(data = datababy_change_ariel, mapping = aes(x=year, y = logprop, color = "Ariel/variations"), size = 2) +
scale_x_continuous(breaks = c(1988,1989,1990)) +
labs(title = "Time series of popularity of names that start with vowels and the name Ariel", subtitle = "Years are from 1988 to 1990", x = "Year", y = "Standardized Popularity", color = "Name match") +
theme_classic()
view(patently)
perm_mean <- function(perms = 1000, values, n1)
{
## Variables ##
# perms: The number of permutations
# values (num):
# n1 (int): Size of group 1
###############
# Step 1:
# Create vector of zeroes of length "perms" to store
# permuted mean differnces
mean_diff <- vector("double", length = perms)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
# Randomly separate vector "values" into disjoint
# groups of size "n1" and "length(values) - n1" respectively
mean_sep1 <- sample(values, n1, replace = T)
mean_sep2 <- setdiff(values, mean_sep1)
# Step 3:
# Compute the sample means for the two groups from
# step 2
mean_value1 <- mean(mean_sep1)
mean_value2 <- mean(mean_sep2)
# Step 4:
# Compute the difference in sample means, store the
# value in the vector from step 1
mean_diff[i] <- mean_value1 - mean_value2
}
# Step 5:
# Return new updated vector, created in step 1
return(mean_diff)
}
#correlation
correlation_data <- patently %>%
select(-year)
cor(correlation_data)[,11]
